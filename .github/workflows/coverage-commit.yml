name: Coverage Commit Badges (C#)

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore src/SampleApp/SampleApp.sln

      - name: Build (Release)
        run: dotnet build src/SampleApp/SampleApp.sln --no-restore -c Release

      # Pastikan project test punya coverlet.msbuild
      - name: Assert coverlet is referenced
        run: |
          grep -q 'coverlet.msbuild' src/SampleApp/SampleApp.Tests/SampleApp.Tests.csproj || \
          (echo "::error::Package coverlet.msbuild belum ditambahkan ke project test" && exit 1)

      - name: Test with coverage (NUnit + Coverlet)
        run: |
          dotnet test src/SampleApp/SampleApp.Tests/SampleApp.Tests.csproj --no-build -c Release \
            --logger "trx;LogFileName=TestResults.trx" \
            /p:CollectCoverage=true \
            /p:CoverletOutput=TestResults/Coverage/coverage \
            /p:CoverletOutputFormat=\"cobertura,opencover,json\"
            /p:Include="[SampleApp*]*" \
            /p:Exclude="[*.Tests*]*" \
            /p:Threshold=80 \
            /p:ThresholdType=\"line,branch\" \
            /p:ThresholdStat=total

      # Debug: tampilkan file yang dihasilkan (berguna saat path salah)
      - name: List coverage files (debug)
        if: always()
        run: |
          echo "== Find coverage files =="
          find src -type f -name "coverage.cobertura.xml" -o -name "TestResults.trx" | sed 's|^| - |'

      - name: Generate coverage report (ReportGenerator)
        uses: danielpalme/ReportGenerator-GitHub-Action@v5
        with:
          reports: '**/coverage.cobertura.xml'
          targetdir: 'coverage-report'
          reporttypes: 'Badges;MarkdownSummary'
          tag: '${{ github.run_number }}'

      - name: Publish coverage summary to job summary
        if: always()
        run: |
          echo "## Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
          cat coverage-report/Summary.md >> $GITHUB_STEP_SUMMARY || true

      - name: Copy badges into repo
        run: |
          mkdir -p docs/coverage-badges
          cp -f coverage-report/badges/*.svg docs/coverage-badges/

      - name: Commit badges
        run: |
          if [ -n "$(git status --porcelain docs/coverage-badges)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add docs/coverage-badges
            git commit -m "chore: update coverage badges [skip ci]" || true
            git push
          fi

      # (Opsional) simpan artefak untuk inspeksi
      - name: Upload TRX & Coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-and-coverage
          path: |
            src/SampleApp/SampleApp.Tests/TestResults.trx
            **/coverage.cobertura.xml
            coverage-report
